<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BhZze/7zjQAAAABJRU5ErkJggg==
</value>
  </data>
</root>